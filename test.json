{
  "ComputeServers": {
    "My_GitHub_Account": {
      "FaaSType": "GitHubActions",
      "UserName": "renatof",
      "UseSecretStore": false,
      "ActionRepoName": "FaaSr-workflow",
      "Branch": "main",
      "Token": "My_GitHub_Account_TOKEN"
    }
  },
  "DataStores": {
    "My_Minio_Bucket": {
      "Bucket": "faasr",
      "Endpoint": "https://play.min.io",
      "Region": "us-east-1",
      "Writable": "TRUE",
      "AccessKey": "My_Minio_Bucket_ACCESS_KEY",
      "SecretKey": "My_Minio_Bucket_SECRET_KEY"
    }
  },
  "ActionList": {
    "add_operation": {
      "FunctionName": "add_rpc",
      "FaaSServer": "My_GitHub_Account",
      "Type": "Python",
      "Arguments": {
        "folder": "testadd",
        "num1": 400,
        "num2": 100,
        "output": "add_result_500.txt"
      },
      "InvokeNext": [
        "r_func(3)"
      ]
    },
    "r_func": {
      "FunctionName": "r_log",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "message": "testing testing testing"
      },
      "InvokeNext": [
        "delete",
        "folders"
      ]
    },
    "delete": {
      "FunctionName": "print_and_delete",
      "FaaSServer": "My_GitHub_Account",
      "Type": "Python",
      "Arguments": {
        "folder": "testadd",
        "filename": "add_result_500.txt"
      },
      "InvokeNext": [
        {
          "True": [
            "folders"
          ]
        }
      ]
    },
    "folders": {
      "FunctionName": "test_list_folders",
      "FaaSServer": "My_GitHub_Account",
      "Type": "Python",
      "InvokeNext": []
    }
  },
  "ActionContainers": {
    "r_func": "ghcr.io/faasr/ga-rpc-r:dev",
    "add_operation": "ghcr.io/faasr/ga-rpc-python:dev",
    "delete": "ghcr.io/faasr/ga-rpc-python:dev",
    "folders": "ghcr.io/faasr/ga-rpc-python:dev"
  },
  "FunctionCRANPackage": {
    "r_log": [
      "gapminder"
    ]
  },
  "PyPIPackageDownloads": {
    "add_rpc": [
      "random2"
    ]
  },
  "FunctionGitHubPackage": {
    "add_rpc": [
      "oittaa/uuid6-python"
    ]
  },
  "FunctionGitRepo": {
    "add_rpc": "nolcut/test-py",
    "r_log": "nolcut/test-py",
    "print_and_delete": "nolcut/test-py",
    "test_list_folders": "nolcut/test-py"
  },
  "FunctionInvoke": "add_operation",
  "InvocationID": "testUUID",
  "InvocationIDFromDate": "%Y%m%d%H%M",
  "FaaSrLog": "FaaSrLog",
  "LoggingDataStore": "My_Minio_Bucket",
  "DefaultDataStore": "My_Minio_Bucket",
  "WorkflowName": "test"
}